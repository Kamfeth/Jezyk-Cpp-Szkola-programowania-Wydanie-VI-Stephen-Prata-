Pytanie #1: Jak zadeklarować następujące zmienne:
     a) Tablicę aktorzy zawierającą 30 znaków char.
     b) Tablicę betsie mającą 100 liczb typu short.
     c) Tablicę chuck mającą 13 liczb typu float.
     d) Tablicę dipsea mającą 64 liczby typu long double.
Odpowiedź #1: 
     a) char actors[30];
     b) short betsie[100];
     c) float chuck[13];
     d) long double dipsea[64];

Pytanie #2: Wykonaj ponownie poprzednie zadanie z użyciem szablonu klasy array zamiast tablicy wbudowanej.
Odpowiedź #2:
     a) std::array<char, 30> actors;
     b) std::array<short, 100> betsie;
     c) std::array<float, 13> chuck;
     d) std::array<long double, 64> dipsea;

Pytanie #3: Zadeklaruj tablicę zawierającą pięć liczb int i zainicjalizuj ją pięcioma pierwszymi nieparzystymi liczbami dodatnimi.
Odpowiedź #3: int firstFiveOddNumbers[5] = {1, 3, 5, 7, 9};

Pytanie #4: Napisz instrukcję przypisującą zmiennej even sumę pierwszego i ostatniego elementu tablicy z poprzedniego pytania.
Odpowiedź #4: int even = firstFiveOddNumbers[0] + firstFiveOddNumbers[4];

Pytanie #5: Napisz instrukcję pokazującą wartość drugiego elementu float tablicy ideas.
Odpowiedź #5: std::cout << ideas[1];

Pytanie #6: Zadeklaruj tablicę typu char oraz zainicjalizuj ją słowem "cheeseburger".
Odpowiedź #6: char fastFood[] = "cheeseburger";

Pytanie #7: Zadeklaruj łańcuch znakowy i zainicjalizuj go literałem "Waldorf Salad".
Odpowiedź #7: std::string healthyFood = "Waldorf Salad";

Pytanie #8: Stwórz deklarację struktury opisującej rybę. 
Struktura ta ma zawierać rodzaj, wagę w całych gramach oraz długość w ułamkach centymetrów.
Odpowiedź #8:
    struct fish {
        std::string type;
        int weight;
        double length;
    };

Pytanie #9: Zadeklaruj zmienną typu opisanego w pytaniu 8 i zainicjalizuj ją.
Odpowiedź #9: fish myFavoriteFish = {"Karp", 5000, 74,63};

Pytanie #10: Korzystając ze słowa kluczowego enum, zdefiniuj typ Odpowiedź mający możliwe wartości Tak, Nie i Chyba. 
Wartościom tym mają odpowiadać liczby, odpowiednio 1, 0 i 2.
Odpowiedź #10: enum Answer {NIE, TAK, CHYBA};

Pytanie #11: Załóżmy, że ted to zmienna typu double. 
Zadeklaruj wskaźnik wskazujący zmienną ted i użyj go do pobrania wartości tej zmiennej.
Odpowiedź #11:
     double * ptr = &ted;
     std::cout << *ptr;

Pytanie #12: Załóżmy, że treacle to tablica 10 liczb float. 
Zadeklaruj wskaźnik wskazujący pierwszy element treacle i użyj go do wyświetlenia pierwszego i ostatniego elementu tablicy.
Odpowiedź #12: 
     float * ptr = &treacle[0];
     std::cout << ptr[0] << " " << ptr[9];

Pytanie #13: Napisz kod, który poprosi użytkownika o podanie dodatniej liczby całkowitej, 
a następnie utworzy tablicę dynamiczną mającą wskazaną liczbę wartości typu int. 
Najpierw napisz program z użyciem operatora new, potem przerób go tak, by korzystał z obiektu vector.
Odpowiedź #13:
     a) std::cout << "Proszę podać dodatnią liczbę całkowitą: ";
        int size;
        std::cin >> size;
        int * ptr = new int[size];
        delete [] ptr;

     b) std::cout << "Proszę podać dodatnią liczbę całkowitą: ";
        int number;
        std::cin >> number;
        std::vector<int> numbers(size);

Pytanie #14: Czy poniższy kod jest prawidłowy? Jeśli tak, to co pokaże?
     cout << (int *) "Dom wesołych bajtów";
Odpowiedź #14: Tak, kod jest poprawny. Wypisuje on adres pamięci w którym zapisany jest łańcuch "Dom wesołych bajtów".

Pytanie #15: Napisz fragment kodu dynamicznie alokujący strukturę 
typu opisanego w ćwiczeniu 8 i odczytujący wartość pola określającego rodzaj ryby.
Odpowiedź #15:
    struct fish {
        std::string type;
        int weight;
        double length;
    };
    std::cout << "Proszę podać rodzaj ryby: ";
    fish * ptr = new fish;
    getline(std::cin, ptr->type);
    delete ptr;
Pytanie #16: Na listingu 4.6 pokazano problem związany z odczytem danych liczbowych z wejścia odczytywanego wierszami. 
Jak zastąpienie w tym listingu wiersza:
     cin.getline(address, 80);
wierszem:
     cin >> address;
wpłynęłoby na działanie programu?
Odpowiedź #16: Po takiej modyfikacji program byłby w stanie odczytać wartość wprowadzoną przez użytkownika i zapisać ją 
poprawnie do tablicy typu char, jednak w taki sposób nie możemy wprowadzać całych wierszy danych, tylko pojedyncze słowa.

Pytanie #17: Zadeklaruj obiekt klasy vector dla 10 obiektów klasy string i obiekt klasy array dla 10 obiektów klasy string. 
Wskaż pliki nagłówkowe, które trzeba najpierw wciągnąć do programu i nie korzystaj z dyrektywy ani z deklaracji using. 
Liczbę obiektów klasy string reprezentuj wartością stałą const.
Odpowiedź #17:
     #include <array>
     #include <string>
     #include <vector>
     
     const int SIZE = 10;
     std::vector<std::string> favoriteBooks(SIZE);
     std::array<std::string, SIZE> favoriteSongs;
